plugins {
  id "com.github.johnrengelman.shadow" version "5.2.0"
  id "org.jetbrains.kotlin.jvm" version "1.4.30"
  id "io.spring.dependency-management" version "1.0.6.RELEASE"
  id "org.jlleitschuh.gradle.ktlint" version "10.0.0"
}

group = 'no.ok.origo.dataplatform'
version = '0.0.1'

repositories {
  mavenCentral()
  jcenter()
  maven { url 'https://jitpack.io' }
}

dependencyManagement {
  imports {
    mavenBom 'software.amazon.awssdk:bom:2.15.+'
  }
}

test {
  environment "AWS_ACCESS_KEY_ID", "mock"
  environment "AWS_SECRET_ACCESS_KEY", "mock"
  environment "BUCKET_NAME", "testbucket"

  useJUnitPlatform()
}

dependencies {
  implementation 'com.github.oslokommune:okdata-common-jvm:0.7.0'
  implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.12.+'
  implementation 'software.amazon.awssdk:s3:2.15.+'
  implementation 'com.schibsted.spt.data:jslt:0.1.11'
  implementation 'com.github.oslokommune:csvlt:0.1.11'
  implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
  implementation 'org.slf4j:slf4j-api:1.7.26'

  // 2.0 <= Apache log4j <= 2.16.0 contains a 0-day exploit:
  //   https://www.lunasec.io/docs/blog/log4j-zero-day
  //   https://www.lunasec.io/docs/blog/log4j-zero-day-update-on-cve-2021-45046
  runtimeOnly "org.apache.logging.log4j:log4j-core:2.17.0"
  runtimeOnly "org.apache.logging.log4j:log4j-api:2.17.0"

  implementation 'org.apache.commons:commons-csv:1.6'
  implementation 'com.amazonaws:aws-lambda-java-core:1.1.0'
  implementation 'com.amazonaws:aws-lambda-java-events:2.0.1'

  testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.2"
  testImplementation "io.mockk:mockk:1.10.0"
  testImplementation("com.adobe.testing:s3mock-junit5:2.1.28") {
    exclude group: "ch.qos.logback"
    exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
  }
}

shadowJar {
  version = ""
}.dependsOn(ktlintCheck)

java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
  kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
  kotlinOptions.jvmTarget = "11"
}

task deploy(type: Exec, dependsOn: 'shadowJar') {
  inputs.files(project.fileTree(dir: "serverless"), project.fileTree(dir: "src/main"))
  outputs.dirs("serverless", "build")
  commandLine 'serverless', 'deploy', '-s', "${project.findProperty('stage') ?: 'dev'}"
}
